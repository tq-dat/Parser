PROGRAM -> TYPE IDENTIFIER DECL PROGRAM | ε
DECL -> PARALIST COMPOUNDSTMT | DECLARATOR INITDECLARATOR INITDECLARATORLIST semicolon
INITDECLARATORLIST -> comma IDENTIFIER DECLARATOR INITDECLARATOR INITDECLARATORLIST | ε
INITDECLARATOR -> equal INITIALISER | ε
DECLARATOR -> lsbrackets INTLITERAL rsbrackets | ε
INTLITERAL -> intliteral | ε
INITIALISER-> EXPR | lbrackets EXPR SUBINITIALISER rbrackets 
SUBINITIALISER -> comma EXPR SUBINITIALISER | ε
TYPE -> void | boolean | int | float 
IDENTIFIER -> id 
COMPOUNDSTMT -> lbrackets VARDECL STMTLIST rbrackets 
VARDECL -> TYPE IDENTIFIER DECLARATOR INITDECLARATOR INITDECLARATORLIST semicolon VARDECL | ε
STMTLIST -> STMT STMTLIST | ε
STMT -> COMPOUNDSTMT | IFSTMT | FORSTMT | WHILESTMT | BREAKSTMT | CONTINUESTMT  RETURNSTMT | EXPRSTMT 
IFSTMT -> if lparenthesis EXPR rparenthesis ELSESTMT STMT 
ELSESTMT -> else STMT | ε
FORSTMT -> for lparenthesis HAVEEXPR semicolon HAVEEXPR semicolon HAVEEXPR rparenthesis STMT 
HAVEEXPR -> EXPR | ε
WHILESTMT -> while lparenthesis EXPR rparenthesis STMT 
BREAKSTMT -> break semicolon 
CONTINUESTMT -> continue semicolon 
RETURNSTMT -> return HAVEEXPR semicolon 
EXPRSTMT -> HAVEEXPR semicolon 
EXPR -> ASSIGNMENTEXPR 
ASSIGNMENTEXPR -> CONDOREXPR A7 
A7 -> equal ASSIGNMENTEXPR | ε
CONDOREXPR -> CONDANDEXPR A6 
A6 -> or CONDANDEXPR A6 | ε
CONDANDEXPR -> EQUALITYEXPR A5 
A5 -> and EQUALITYEXPR A5 | ε
EQUALITYEXPR -> RELEXPR A4 
A4 -> same RELEXPR A4 | different RELEXPR A4 | ε
RELEXPR -> ADDITIVEEXPR A3 
A3 -> less ADDITIVEEXPR A3 | lessequal ADDITIVEEXPR A3 | greater ADDITIVEEXPR A3  greaterequal ADDITIVEEXPR A3 
ADDITIVEEXPR -> MULTIPLICATIVEEXPR A2 
A2 -> plus MULTIPLICATIVEEXPR A2 | minus MULTIPLICATIVEEXPR A2 | ε
MULTIPLICATIVEEXPR -> UNARYEXPR A1 
A1 -> multiply UNARYEXPR A1 | divide UNARYEXPR A1 | ε
UNARYEXPR -> plus UNARYEXPR | minus UNARYEXPR | not UNARYEXPR | PRIMARYEXPR 
PRIMARYEXPR -> IDENTIFIER A0 | lparenthesis EXPR rparenthesis | intliteral  floatliteral  stringliteral 
A0 -> ARGLIST | lsbrackets EXPR rsbrackets| ε 
PARALIST -> lparenthesis HAVEPROPERPARALIST rparenthesis
HAVEPROPERPARALIST -> PROPERPARALIST | ε
PROPERPARALIST -> PARADECL SUBPROPERPARALIST
SUBPROPERPARALIST -> comma PARADECL SUBPROPERPARALIST | ε
PARADECL -> TYPE DECLARATOR
ARGLIST -> lparenthesis HAVEPROPERARGLIST rparenthesis 
HAVEPROPERARGLIST -> PROPERARGLIST | ε
PROPERARGLIST -> ARG SUBPROPERARGLIST 
SUBPROPERARGLIST -> comma ARG SUBPROPERARGLIST| ε
ARG -> EXPR
